---
- name: "Get user: {{ username }}"
  uri:
    url: "https://{{ rhsso_route }}/auth/admin/realms/{{ rhsso_realm }}/users?first=0&max=1&search={{ email }}"
    method: GET
    validate_certs: "{{ rhsso_validate_certs }}"
    return_content: yes
    headers:
      Authorization: "Bearer {{ rhsso_admin_token }}"
    status_code: 200
  register: remove

- name: Remove current user
  uri:
    url: "https://{{ rhsso_route }}/auth/admin/realms/{{ rhsso_realm }}/users/{{ remove.json[0].id }}"
    method: DELETE
    validate_certs: "{{ rhsso_validate_certs }}"
    body_format: json
    headers:
      Authorization: "Bearer {{ rhsso_admin_token }}"
    status_code: 204
  when: remove.json[0] is defined

- name: "Create user: {{ username }}"
  uri:
    url: "https://{{ rhsso_route }}/auth/admin/realms/{{ rhsso_realm }}/users"
    method: POST
    body: "{{ lookup('template', './user.json.j2') }}"
    validate_certs: "{{ rhsso_validate_certs }}"
    body_format: json
    headers:
      Authorization: "Bearer {{ rhsso_admin_token }}"
    status_code: [201, 409]
  when: rhsso_auth_response.status != 503

- name: "Get user: {{ username }}"
  uri:
    url: "https://{{ rhsso_route }}/auth/admin/realms/{{ rhsso_realm }}/users?first=0&max=1&search={{ email }}"
    method: GET
    validate_certs: "{{ rhsso_validate_certs }}"
    return_content: yes
    headers:
      Authorization: "Bearer {{ rhsso_admin_token }}"
    status_code: 200
  register: get_evals_user_request

- set_fact:
    rhsso_eval_user_id: "{{ get_evals_user_request.json[0].id }}"

- name: "Reset user password: {{ username }}"
  uri:
    url: "https://{{ rhsso_route }}/auth/admin/realms/{{ rhsso_realm }}/users/{{ rhsso_eval_user_id }}/reset-password"
    method: PUT
    body: "{{ lookup('template', './password-reset.json.j2') }}"
    validate_certs: "{{ rhsso_validate_certs }}"
    body_format: json
    headers:
      Authorization: "Bearer {{ rhsso_admin_token }}"
    status_code: [204]
  when: rhsso_auth_response.status != 503
