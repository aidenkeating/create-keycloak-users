---
- name: Retrieve RH-SSO admin user password
  shell: oc get dc/sso -o jsonpath='{.spec.template.spec.containers[?(@.name=="sso")].env[?(@.name=="SSO_ADMIN_PASSWORD")].value}' -n {{ rhsso_namespace }}
  register: rhsso_admin_password_cmd

- debug: msg="https://{{ rhsso_route }}/auth/realms/{{ rhsso_admin_realm }}/protocol/openid-connect/token {{ rhsso_admin_username }} {{ rhsso_admin_password_cmd.stdout }} "

- name: Generate RH-SSO auth token for admin user
  uri:
    url: "https://{{ rhsso_route }}/auth/realms/{{ rhsso_admin_realm }}/protocol/openid-connect/token"
    method: POST
    body: "client_id=admin-cli&username={{ rhsso_admin_username }}&password={{ rhsso_admin_password_cmd.stdout }}&grant_type=password"
    validate_certs: "{{ rhsso_validate_certs }}"
  register: rhsso_auth_response
  retries: 20
  delay: 2
  until: rhsso_auth_response.status == 200

- set_fact:
    rhsso_admin_token: "{{ rhsso_auth_response.json.access_token }}"

- debug: msg="{{ rhsso_seed_users_email_format }}"

- name: Seed users
  include: user.yml email={{ rhsso_seed_users_email_format|format(item|int) }} username={{ rhsso_seed_users_name_format|format(item|int)}} password={{ rhsso_seed_users_password }}
  with_sequence: count={{ rhsso_seed_users_count }}
